from ultralytics import YOLO
import cv2
import matplotlib.pyplot as plt
import easyocr

# Muat model
model = YOLO("C:/Users/Public/Documents/Codes/yolov10/runs/detect/train10/weights/best.pt")

# Lakukan prediksi
image_path = "C:/Users/Public/Documents/Codes/Images/B 2358 RXP.png"
results = model.predict(
    source=image_path,
    conf=0.25,
    save=True
)

# Ambil hasil pertama
result = results[0]
boxes = result.boxes.xyxy  # Koordinat [x1, y1, x2, y2]
confidences = result.boxes.conf
classes = result.boxes.cls

# Proses jika ada deteksi
if len(boxes) > 0:
    # Ambil kotak pertama (karena 1 deteksi)
    x1, y1, x2, y2 = map(int, boxes[0])
    print(f"Koordinat bounding box: ({x1}, {y1}, {x2}, {y2})")

    # Muat gambar asli (sama dengan source)
    image = cv2.imread(image_path)
    cropped_image = image[y1:y2, x1:x2]

    # Konversi dari BGR ke RGB untuk tampilan
    cropped_image_rgb = cv2.cvtColor(cropped_image, cv2.COLOR_BGR2RGB)

    # Tampilkan gambar yang dipotong di Jupyter Notebook
    plt.figure(figsize=(8, 4))
    plt.imshow(cropped_image_rgb)
    plt.title("Cropped License Plate Area")
    plt.axis('off')
    plt.show()

    # Inisialisasi EasyOCR (tambahkan 'id' untuk bahasa Indonesia)
    reader = easyocr.Reader(['en', 'id'])

    # Deteksi teks dari area yang dipotong
    results = reader.readtext(cropped_image_rgb)

    # Tampilkan teks yang terdeteksi
    if results:
        print("Teks yang terdeteksi:")
        for (bbox, text, prob) in results:
            print(f"Teks: {text}, Probabilitas: {prob:.2f}")
    else:
        print("Tidak ada teks yang terdeteksi.")

    # Simpan gambar yang dipotong (opsional)
    cv2.imwrite("cropped_B_9794_CRW.png", cropped_image)
    print("Cropped image saved as cropped_B_9794_CRW.png")
else:
    print("Tidak ada deteksi plat nomor.")
